<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*
  ~  *
  ~  * ******************************************************************************
  ~  *
  ~  *  Copyright (c) 2023-24 Ashish Kumar Singh
  ~  *
  ~  *
  ~  *
  ~  *  Licensed under the Apache License, Version 2.0 (the "License");
  ~  *
  ~  *  you may not use this file except in compliance with the License.
  ~  *
  ~  *  You may obtain a copy of the License at
  ~  *
  ~  *
  ~  *
  ~  *  http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  *
  ~  *  Unless required by applicable law or agreed to in writing, software
  ~  *
  ~  *  distributed under the License is distributed on an "AS IS" BASIS,
  ~  *
  ~  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  *
  ~  *  See the License for the specific language governing permissions and
  ~  *
  ~  *  limitations under the License.
  ~  *
  ~  *
  ~  *
  ~  *  SPDX-License-Identifier: Apache-2.0
  ~  *
  ~  *  *******************************************************************************
  ~  *
  ~  */
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>mars2-multitenant</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>mars2-multitenant</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>8</java.version>
		<java.17.options>
			--add-opens=java.base/java.io=ALL-UNNAMED
			--add-opens=java.base/java.lang=ALL-UNNAMED
			--add-opens=java.base/java.math=ALL-UNNAMED
			--add-opens=java.base/java.util=ALL-UNNAMED
			--add-opens=java.base/java.util.concurrent=ALL-UNNAMED
			--add-opens=java.base/java.net=ALL-UNNAMED
			--add-opens=java.base/java.text=ALL-UNNAMED
			--add-opens=java.sql/java.sql=ALL-UNNAMED
		</java.17.options>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.12.0</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-mock -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20070829</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>6.1.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>8</source>
					<target>8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.1</version>
				<configuration>
					<forkCount>3</forkCount>
					<reuseForks>false</reuseForks>
					<forkMode>pertest</forkMode>
					<argLine>
						${surefireArgLine}
					</argLine>
					<childDelegation>true</childDelegation>
					<skipTests>false</skipTests>
					<runOrder>alphabetical</runOrder>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
					<excludes>
						<exclude>**/**.jar</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<pluginRepositories>
		<pluginRepository>
			<id>dash-licenses-snapshots</id>
			<url>https://repo.eclipse.org/content/repositories/dash-licenses-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub HARMAN Automotive Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/AshishKmrSingh/multi-tenant</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</distributionManagement>

</project>
